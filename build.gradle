#!./gradlew test

// Primarily for unit-testing per instructions from
//   https://dev.to/kuperadrian/how-to-setup-a-unit-testable-jenkins-shared-pipeline-library-2e62
// merged with template from `gradle init` (v7.0.1)

//apply plugin: 'groovy'
//apply plugin: 'java'
plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    //id 'java'
}

group 'org.nut.dynamatrix'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.7'
    //compile 'org.codehaus.groovy:groovy-all:2.3.11'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.0-jre'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
    testImplementation 'junit:junit:4.13.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    //testCompile group: 'junit', name: 'junit', version: '4.12'
    //testCompile "org.mockito:mockito-core:2.+"
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = []
        }
        groovy {
            // all code files will be in either of the folders
            srcDirs = ['src']
            //srcDirs = ['src', 'vars'] 
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}
